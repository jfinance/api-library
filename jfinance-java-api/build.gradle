plugins {
    id 'com.google.protobuf'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'java'
    id 'maven-publish'
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java'
    implementation 'com.google.protobuf:protobuf-java-util'
    implementation 'io.grpc:grpc-protobuf'
    implementation 'io.rsocket.rpc:rsocket-rpc-core'
    implementation "com.salesforce.servicelibs:reactor-grpc-stub"

    protobuf 'io.rsocket.rpc:rsocket-rpc-protobuf-idl'
    protobuf project(':proto-library')
}

/*
sourceSets {
    main {
        proto { srcDir 'src/main/proto' }
    }
}
*/

protobuf {
    generatedFilesBaseDir = "${projectDir}/src/generated"

    protoc {
        artifact = 'com.google.protobuf:protoc'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java"
        }
        reactorGRpc {
            artifact = "com.salesforce.servicelibs:reactor-grpc:0.10.0-RC1:jdk8@jar"
        }
        rsocketRpc {
            artifact = "io.rsocket.rpc:rsocket-rpc-protobuf"
        }
    }

    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            grpc {}
            rsocketRpc  {}
            reactorGRpc {}
        }
    }
}

idea {
    module {
        sourceDirs += file("src/generated/main/java")
        sourceDirs += file("src/generated/main/grpc")
        sourceDirs += file("src/generated/main/reactorGRpc")
        sourceDirs += file("src/generated/main/rsocketRpc")

        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file("src/generated/main/grpc")
        generatedSourceDirs += file("src/generated/main/reactorGRpc")
        generatedSourceDirs += file("src/generated/main/rsocketRpc")
    }
}
/*
publishing {
    publications {
        jfinanceJavaApiLibrary(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
              *//*  usage('java-runtime') {
                    fromResolutionResult()
                }*//*
            }
        }
    }
}*/

publishing{
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}